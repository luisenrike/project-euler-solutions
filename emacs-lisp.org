* Multiples of 3 and 5

If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.

Find the sum of all the multiples of 3 or 5 below 1000.

#+begin_src emacs-lisp
(defun mult-of(n m)
  (= (% m n) 0))

(defalias #'mult-of-3 (apply-partially #'mult-of 3))
(defalias #'mult-of-5 (apply-partially #'mult-of 5))

(defun mult-of-3-or-5 (n)
  (or (mult-of-3 n)
      (mult-of-5 n)))

(apply #'+ (seq-filter #'mult-of-3-or-5 (number-sequence 1 999))))
#+end_src

#+RESULTS:
: 233168

* Even Fibonacci numbers
   
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

#+begin_src emacs-lisp
(defun fibs-under (n)
  (let ((a 1)
        (b 1)
        fibs)
    (while (<= a n)
      (setq fibs (cons a fibs))
      (setq a (+ a b))
      (setq b (- a b)))
    fibs))

(apply #'+ (seq-filter (lambda (n) (= (% n 2) 0)) (fibs-under 4000000)))
#+end_src

#+RESULTS:
: 4613732
